# Generated by Django 4.0.6 on 2022-07-27 01:45

from django.db import migrations, models
import localflavor.mx.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=10, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(blank=True, choices=[('M', 'MASCULINO'), ('F', 'FEMENINO'), ('O', 'OTRO')], max_length=1)),
                ('curp', localflavor.mx.models.MXCURPField(max_length=18)),
                ('rfc', localflavor.mx.models.MXRFCField(max_length=13)),
                ('cp', localflavor.mx.models.MXZipCodeField(blank=True, max_length=5)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='MX')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('rol', models.CharField(choices=[('1', 'Administrador'), ('2', 'Lectura'), ('3', 'Lectura/Escritura')], max_length=1)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
